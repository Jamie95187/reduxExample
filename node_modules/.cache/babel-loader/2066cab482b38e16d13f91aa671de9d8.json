{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          value: action.result\n        })\n      };\n\n    case actionTypes.DELETE_RESULT:\n      // const id = 2;\n      // const newArray = [...state.results];\n      // newArray.splice(id, 1);\n      const updatedArray = state.results.filter(result => result.id !== action.resultElementId);\n      return { ...state,\n        // results: newArray\n        results: updatedArray\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/student/Desktop/Udemy-React-Complete-Guide/redux--01-start/src/store/reducers/result.js"],"names":["actionTypes","initialState","results","reducer","state","action","type","STORE_RESULT","concat","id","Date","value","result","DELETE_RESULT","updatedArray","filter","resultElementId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAASA,MAAM,CAACC,IAAhB;AACE,SAAKN,WAAW,CAACO,YAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAL;AAAiBC,UAAAA,KAAK,EAAEN,MAAM,CAACO;AAA/B,SAArB;AAFJ,OAAP;;AAIF,SAAKZ,WAAW,CAACa,aAAjB;AACE;AACA;AACA;AACA,YAAMC,YAAY,GAAGV,KAAK,CAACF,OAAN,CAAca,MAAd,CAAqBH,MAAM,IAAIA,MAAM,CAACH,EAAP,KAAcJ,MAAM,CAACW,eAApD,CAArB;AACA,aAAO,EACL,GAAGZ,KADE;AAEL;AACAF,QAAAA,OAAO,EAAEY;AAHJ,OAAP;AAXJ;;AAiBA,SAAOV,KAAP;AACD,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  results: []\n}\n\nconst reducer = (state = initialState, action) => {\n  switch ( action.type ) {\n    case actionTypes.STORE_RESULT:\n      return {\n        ...state,\n        results: state.results.concat({id: new Date(), value: action.result})\n      }\n    case actionTypes.DELETE_RESULT:\n      // const id = 2;\n      // const newArray = [...state.results];\n      // newArray.splice(id, 1);\n      const updatedArray = state.results.filter(result => result.id !== action.resultElementId);\n      return {\n        ...state,\n        // results: newArray\n        results: updatedArray\n      }\n  }\n  return state;\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}