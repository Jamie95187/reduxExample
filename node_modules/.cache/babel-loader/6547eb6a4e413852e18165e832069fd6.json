{"ast":null,"code":"export const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const ADD = 'ADD';\nexport const SUBTRACT = 'SUBTRACT';\nexport const STORE_RESULT = 'STORE_RESULT';\nexport const DELETE_RESULT = 'DELETE_RESULT';\nexport const increment = () => {\n  return {\n    type: INCREMENT\n  };\n};\nexport const decrement = () => {\n  return {\n    type: DECREMENT\n  };\n};\nexport const add = value => {\n  return {\n    type: ADD,\n    val: value\n  };\n};\nexport const subtract = value => {\n  return {\n    type: SUBTRACT,\n    val: value\n  };\n};\nexport const saveResult = res => {\n  return {\n    type: STORE_RESULT,\n    result: res\n  };\n};\nexport const storeResult = res => {\n  // We want to simulate that we only store results after 2 seconds of reaching out to a server\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(saveResult(res));\n    }, 2000);\n  };\n  return {\n    type: STORE_RESULT,\n    result: res\n  };\n};\nexport const deleteResult = resEleId => {\n  return {\n    type: DELETE_RESULT,\n    resultElementId: resEleId\n  };\n};","map":{"version":3,"sources":["/Users/student/Desktop/Udemy-React-Complete-Guide/redux--01-start/src/store/actions/actions.js"],"names":["INCREMENT","DECREMENT","ADD","SUBTRACT","STORE_RESULT","DELETE_RESULT","increment","type","decrement","add","value","val","subtract","saveResult","res","result","storeResult","dispatch","setTimeout","deleteResult","resEleId","resultElementId"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,GAAG,GAAG,KAAZ;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEP;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMQ,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLD,IAAAA,IAAI,EAAEN;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMQ,GAAG,GAAIC,KAAD,IAAW;AAC5B,SAAO;AACLH,IAAAA,IAAI,EAAEL,GADD;AAELS,IAAAA,GAAG,EAAED;AAFA,GAAP;AAID,CALM;AAOP,OAAO,MAAME,QAAQ,GAAIF,KAAD,IAAW;AACjC,SAAO;AACLH,IAAAA,IAAI,EAAEJ,QADD;AAELQ,IAAAA,GAAG,EAAED;AAFA,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,UAAU,GAAKC,GAAF,IAAW;AACnC,SAAO;AACLP,IAAAA,IAAI,EAAEH,YADD;AAELW,IAAAA,MAAM,EAAED;AAFH,GAAP;AAID,CALM;AAOP,OAAO,MAAME,WAAW,GAAIF,GAAD,IAAS;AAClC;AACA,SAAOG,QAAQ,IAAI;AACjBC,IAAAA,UAAU,CAAE,MAAM;AAChBD,MAAAA,QAAQ,CAACJ,UAAU,CAACC,GAAD,CAAX,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD;AAKA,SAAO;AACLP,IAAAA,IAAI,EAAEH,YADD;AAELW,IAAAA,MAAM,EAAED;AAFH,GAAP;AAID,CAXM;AAaP,OAAO,MAAMK,YAAY,GAAIC,QAAD,IAAc;AACxC,SAAO;AACLb,IAAAA,IAAI,EAAEF,aADD;AAELgB,IAAAA,eAAe,EAAED;AAFZ,GAAP;AAID,CALM","sourcesContent":["export const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const ADD = 'ADD';\nexport const SUBTRACT = 'SUBTRACT';\nexport const STORE_RESULT = 'STORE_RESULT';\nexport const DELETE_RESULT = 'DELETE_RESULT';\n\nexport const increment = () => {\n  return {\n    type: INCREMENT\n  };\n};\n\nexport const decrement = () => {\n  return {\n    type: DECREMENT\n  };\n};\n\nexport const add = (value) => {\n  return {\n    type: ADD,\n    val: value\n  };\n};\n\nexport const subtract = (value) => {\n  return {\n    type: SUBTRACT,\n    val: value\n  };\n};\n\nexport const saveResult = ( res ) => {\n  return {\n    type: STORE_RESULT,\n    result: res\n  }\n}\n\nexport const storeResult = (res) => {\n  // We want to simulate that we only store results after 2 seconds of reaching out to a server\n  return dispatch => {\n    setTimeout( () => {\n      dispatch(saveResult(res));\n    }, 2000);\n  }\n  return {\n    type: STORE_RESULT,\n    result: res\n  };\n};\n\nexport const deleteResult = (resEleId) => {\n  return {\n    type: DELETE_RESULT,\n    resultElementId: resEleId\n  };\n};\n"]},"metadata":{},"sourceType":"module"}